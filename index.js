/**
* Index.js
* Authors: Nicolai Ferraris
* Notes:
* 1) Ensure Node.js is installed
* 2) Run 'npm install'
* 3) Need to ensure that ngrok is installed and running
* 4) Since we are using the free version, use ./ngrok http 5000 to designate our local server to be ran on port 5000
* 5) In your terminal, take the autogenerated url, and change the messaging Request URL (HTTP POST) to that url, followed by /api/post this is done so that all text messagees sent to your specified number are routed to /api/post
* 6) By changing the messaging Request URL, I mean go to your twilio account -> Phone Numbers -> Manage -> Messaging, and set the HTTP POST route there
* 7) Ensure that mongo is installed and running with 'sudo mongod'
* 8) Send text messages to the phone number in your account Phone Numbers tab to your heart's content
**/
var exp = require('express');
var fs = require('fs');
var bodyParser = require('body-parser');
var app = exp();
var mongoose = require('mongoose');
var twilio = require('twilio');
var wit = require('node-wit');

var ACCESS_TOKEN = "DJLFEBRSYGLSACBFJJ426TEQGQ56GCV6";

call_wit = function(message){
	wit.captureTextIntent(ACCESS_TOKEN, message, function (err, res) {
		console.log("Response from Wit for text input: ");
		if (err) console.log("Error: ", err);
		console.log(JSON.stringify(res, null, " "));
	});
}

mongoose.connect('mongodb://localhost/Personal_Assistant'); //Define which database to use

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({    extended: true    }));

var client = new twilio.RestClient("AC517c49116e16eade23eb78b4cd1dd109" , "7b2e9c4aef8b8db598038aed879bcba3" );

var db = mongoose.connection; //open mongoose connection


db.on('error', console.error.bind(console, 'connection error'));
db.once('open', function(callback){
});

var mySchema = mongoose.Schema({ //Declare a schema
	number: String, //data goes here
	message: String
});

mySchema.methods.print = function(){ //Illustrates creating a 'method' for schemas.
	if(this.number == null){
		console.log('There is no number!');
	} else {
		console.log(this.number + ": " + this.message);
	}
}
var myschema = mongoose.model('PA_Model_Basic', mySchema);

var silence = new myschema({number: '711', message: 'hello world!'}); //Demonstrate creating a schema
silence.print(); //Demonstrate calling a method with an instance of a schema

/*
app.get('/', function(req, res){ //Ignore this. Just playing around with this idea
	res.sendFile('./index.html', {root: __dirname});
});
*/
app.post('/api/post', function(req, res){ //This illustrates the path api/post which is what I have my text messages as twilio uses 'webhooks' to let server know that incoming message or call arrives
	var sender = req.body.From; //This line gets the phone number
	var message = req.body.Body; //This line gets the body of the message
	var time = req.body.Time;
	console.log(time);
	var newData = new myschema(); //Creating a new schema instance
	newData.number = sender;
	newData.message = message; 
	newData.save(function(err, res){ //Attempts to save the new schema instance onto our database
		if(err){
			return console.error(err);
		}
		newData.print();	
	});
	call_wit(message);	
	res.send(message); //sends the message if successful
});

app.post('/test', function(req,res){ //Another route that simply prints out "From: (Phone number) \n (Message)"
	console.log("From: " + req.body.From);
	console.log(req.body.Body);
});

app.listen(5000); //listens on port 5000
